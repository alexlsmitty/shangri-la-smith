name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Configure GitHub Pages first
  setup-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

  build-and-deploy:
    needs: setup-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      - name: Install ESLint parser explicitly
        run: npm install --no-save vue-eslint-parser@10.1.3

      - name: Check for linting errors
        run: npm run lint

      - name: Build for GitHub Pages
        run: |
          echo "Installing terser..."
          npm install terser --no-save
          echo "Building for GitHub Pages..."
          npm run build:github
          
          # Ensure base tag is present in HTML files
          echo "Checking for base tag in index.html..."
          if ! grep -q "<base href=\"/shangri-la-smith/\">" dist/index.html; then
            echo "Adding base tag to index.html..."
            sed -i 's/<meta charset="UTF-8">/<meta charset="UTF-8">\n    <base href="\/shangri-la-smith\/">/' dist/index.html
          fi
          
          # Create SPA routing support with 404.html
          echo "Creating 404.html for SPA routing..."
          cp dist/index.html dist/404.html
          
          # Add importmap if not present
          if ! grep -q "importmap" dist/index.html; then
            echo "Adding importmap to index.html..."
            sed -i 's/<\/head>/  <script type="importmap">\n    {\n      "imports": {\n        "vue": "https:\/\/unpkg.com\/vue@3.5.13\/dist\/vue.esm-browser.prod.js",\n        "vue-router": "https:\/\/unpkg.com\/vue-router@4.5.0\/dist\/vue-router.esm-browser.js",\n        "vuetify": "https:\/\/unpkg.com\/vuetify@3.3.23\/dist\/vuetify.esm.js",\n        "@vueuse\/core": "https:\/\/unpkg.com\/@vueuse\/core@10.7.0\/index.mjs"\n      }\n    }\n    <\/script>\n<\/head>/' dist/index.html
            sed -i 's/<\/head>/  <script type="importmap">\n    {\n      "imports": {\n        "vue": "https:\/\/unpkg.com\/vue@3.5.13\/dist\/vue.esm-browser.prod.js",\n        "vue-router": "https:\/\/unpkg.com\/vue-router@4.5.0\/dist\/vue-router.esm-browser.js",\n        "vuetify": "https:\/\/unpkg.com\/vuetify@3.3.23\/dist\/vuetify.esm.js",\n        "@vueuse\/core": "https:\/\/unpkg.com\/@vueuse\/core@10.7.0\/index.mjs"\n      }\n    }\n    <\/script>\n<\/head>/' dist/404.html
          fi
          
          # Update asset paths in HTML files
          echo "Fixing asset paths in HTML files..."
          sed -i 's/src="\//src="\/shangri-la-smith\//g' dist/index.html
          sed -i 's/href="\//href="\/shangri-la-smith\//g' dist/index.html
          sed -i 's/src="\//src="\/shangri-la-smith\//g' dist/404.html
          sed -i 's/href="\//href="\/shangri-la-smith\//g' dist/404.html
          
          # Create special GitHub Pages redirect handler
          echo "Creating GitHub Pages redirect handler..."
          cat > dist/404-spa-redirect.js << 'EOF'
          // Single Page App redirect for GitHub Pages
          (function() {
            const l = window.location;
            if (l.search) {
              const q = {};
              l.search.slice(1).split('&').forEach(v => {
                const a = v.split('=');
                q[a[0]] = a[1];
              });
              if (q.redirect) {
                const path = q.redirect.replace(/~and~/g, '&');
                window.history.replaceState(null, null,
                  l.pathname.slice(0, -1) + (path.startsWith('/') ? path : '/' + path) +
                  (q.query ? ('?' + q.query) : '') + l.hash
                );
              }
            }
          }());
          EOF
          
          # Add redirect script to index.html
          echo "Adding redirect script to index.html..."
          sed -i 's/<\/body>/<script src="\/shangri-la-smith\/404-spa-redirect.js"><\/script>\n<\/body>/' dist/index.html
          sed -i 's/<\/body>/<script src="\/shangri-la-smith\/404-spa-redirect.js"><\/script>\n<\/body>/' dist/404.html
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_OPENWEATHER_API_KEY: ${{ secrets.VITE_OPENWEATHER_API_KEY }}

      # Verify built files exist
      - name: Check build output
        run: |
          echo "Checking build output..."
          ls -la dist/
          if [ ! -f dist/index.html ]; then
            echo "Error: index.html is missing from build output!"
            exit 1
          fi
          echo "Build output looks good."
          
      # Create .nojekyll file to prevent Jekyll processing
      - name: Add .nojekyll file
        run: touch ./dist/.nojekyll

      # Deploy to GitHub Pages
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          folder: dist
          branch: gh-pages
          clean: true
          # Use the built-in GITHUB_TOKEN with explicitly assigned permissions
          token: ${{ github.token }}
